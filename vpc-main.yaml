---
  AWSTemplateFormatVersion: "2010-09-09"

  Description: "Create a VPC"
  Parameters:
    VPCName:
      Description: "The name of the VPC"
      Type: String
      Default: "James VPC"

  Mappings:
    SubnetConfig:
      VPC:
        CIDR: "10.0.0.0/16"
      Public0:
        CIDR: "10.0.0.0/24"
      Public1:
        CIDR: "10.0.1.0/24"
      Private0:
        CIDR: "10.0.2.0/24"
      Private1:
        CIDR: "10.0.3.0/24"

    AZRegions:
      eu-west-1:
        AZs: ["a", "b"]
      eu-west-2:
        AZs: ["a", "b"]
      us-east-1:
        AZs: ["a", "b"]

  Resources:
    VPC:
      Type: "AWS::EC2::VPC"
      Properties:
       EnableDnsSupport: true
       EnableDnsHostnames: true
       CidrBlock: 
         Fn::FindInMap:
           - "SubnetConfig"
           - "VPC"
           - "CIDR"
       Tags:
         -
           Key: "Name"
           Value: !Ref 'VPCName'

    PublicSubnet0:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Public0"
            - "CIDR"
        MapPublicIpOnLaunch: true


    PublicSubnet1:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Public1"
            - "CIDR"
        MapPublicIpOnLaunch: true

    PrivateSubnet0:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 0, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private0"
            - "CIDR"

    PrivateSubnet1:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId:
          Ref: "VPC"
        AvailabilityZone:
          Fn::Sub:
            - "${AWS::Region}${AZ}"
            - AZ: !Select [ 1, !FindInMap [ "AZRegions", !Ref "AWS::Region", "AZs" ] ]
        CidrBlock:
          Fn::FindInMap:
            - "SubnetConfig"
            - "Private1"
            - "CIDR"

    InternetGateway:
      Type: "AWS::EC2::InternetGateway"

    GatewayToInternet:
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties:
        VpcId:
          Ref: "VPC"
        InternetGatewayId:
          Ref: "InternetGateway"

    PublicRouteTable:
      Type: "AWS::EC2::RouteTable"
      Properties:
        VpcId:
          Ref: "VPC"
 
    PublicRoute:
      Type: "AWS::EC2::Route"
      DependsOn: "GatewayToInternet"
      Properties:
        RouteTableId:
          Ref: "PublicRouteTable"
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId:
          Ref: "InternetGateway"

    PublicSubnetRouteTableAssociation0:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet0"
        RouteTableId:
          Ref: "PublicRouteTable"

    PublicSubnetRouteTableAssociation1:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
        SubnetId:
          Ref: "PublicSubnet1"
        RouteTableId:
          Ref: "PublicRouteTable"
  Outputs:
    VpcId:
      Description: "VPC ID"
      Value:
        Ref: "VPC"
      Export:
        Name:
          Fn::Sub: "${AWS::StackName}-VPCID"
    PublicSubnet0:
      Description: "Public Subnet 0"
      Value:
        Ref: "PublicSubnet0"
      Export:
        Name:
          Fn::Sub: "${AWS::StackName}-PublicSubnet0" 
    PublicSubnet1:
      Description: "Public Subnet 1"
      Value:
        Ref: "PublicSubnet1"
      Export:
        Name:
          Fn::Sub: "${AWS::StackName}-PublicSubnet1" 
    PrivateSubnet0:
      Description: "Private Subnet 0"
      Value:
        Ref: "PrivateSubnet0"
      Export:
        Name:
          Fn::Sub: "${AWS::StackName}-PrivateSubnet0" 
    PrivateSubnet1:
      Description: "Private Subnet 1"
      Value:
        Ref: "PrivateSubnet1"
      Export:
        Name:
          Fn::Sub: "${AWS::StackName}-PrivateSubnet1" 
